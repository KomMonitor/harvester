openapi: 3.0.1
info:
  title: KomMonitor Harvester API
  description: KomMonitor Harvester API to harvest/transfer spatial data from one
    instance to another
  termsOfService: http://swagger.io/terms/
  contact:
    email: christian.danowski-buhren@hs-bochum.de
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: http://localhost:8089/
- url: https://localhost:8089/
tags:
- name: harvester
  description: Harvest data
paths:
  /harvest/execute:
    post:
      tags:
      - harvester
      summary: Perform harvesting process according to submitted config.
      description: Perform harvesting process according to submitted config.
      operationId: executeHarvesting
      requestBody:
        description: details necessary to execute harvesting process
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HarvesterInputType'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HarvesterOutputType'
        "401":
          description: Unauthorized
          headers:
            WWW_Authenticate:
              style: simple
              explode: false
              schema:
                type: string
          content: {}
        "405":
          description: Invalid input
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-swagger-router-controller: Harvester
      x-codegen-request-body-name: harvester-input
components:
  schemas:
    HarvesterInputType:
      type: object
      properties:
        sourceInstance:
          $ref: '#/components/schemas/KomMonitorInstanceType'
        targetInstance:
          $ref: '#/components/schemas/KomMonitorInstanceType'
        dataMapping:
          $ref: '#/components/schemas/DataMappingType'
      description: required input parameters to execute a customizable indicator computation
    HarvesterOutputType:
      type: object
      properties:
        spatialUnitSummary:
          type: array
          items:
            $ref: '#/components/schemas/SpatialUnitSummaryType'
        indicatorSummary:
          type: array
          items:
            $ref: '#/components/schemas/IndicatorSummaryType'
      description: output generated by a harvesting process
      example:
        indicatorSummary:
        - ""
        - ""
        spatialUnitSummary:
        - ""
        - ""
    SummaryType:
      type: object
      properties:
        sourceDatasetName:
          type: string
          description: the name of the imported  source dataset.
        sourceDatasetId:
          type: string
          description: the id of the imported  source dataset.
        targetDatasetName:
          type: string
          description: the name of the target dataset.
        targetDatasetId:
          type: string
          description: the id of the target dataset.
        harvestProcessResult:
          type: string
          description: shows information about whether the harvest process of this
            dataset completed without errors or whether something went wrong
          enum:
          - COMPLETED WITHOUT ERRORS
          - ERRORS OCCURRED
        errorsOccurred:
          type: array
          items:
            $ref: '#/components/schemas/SummaryType_errorsOccurred'
      description: generic summary information about harvested data
    SpatialUnitSummaryType:
      allOf:
      - $ref: '#/components/schemas/SummaryType'
      - type: object
        properties:
          numberOfHarvestedFeatures:
            type: number
            format: int32
        description: summary information about harvested spatial unit feature data
    IndicatorSummaryType:
      allOf:
      - $ref: '#/components/schemas/SummaryType'
      - type: object
        properties:
          numberOfHarvestedTimestamps:
            type: number
            format: int32
          harvestedTimestamps:
            type: array
            items:
              type: string
              format: date
          harvestedSpatialUnits:
            type: array
            items:
              $ref: '#/components/schemas/IndicatorSpatialUnitMappingResultType'
        description: summary information about harvested indicatort timeseries data
    KomMonitorInstanceType:
      required:
      - url
      type: object
      properties:
        url:
          type: string
          description: the url to the data management service of the instance.
        authentication:
          $ref: '#/components/schemas/AuthenticationType'
      description: access information about specific KomMonitor instance
    DataMappingType:
      type: object
      properties:
        spatialUnitMappingDefs:
          type: array
          description: array of spatial unit feature mapping definitions
          items:
            $ref: '#/components/schemas/SpatialUnitDataMappingType'
        indicatorMappingDefs:
          type: array
          description: array of indicator feature mapping definitions
          items:
            $ref: '#/components/schemas/IndicatorDataMappingType'
      description: data mapping containing the required infos about what data shall
        be transferred
    SpatialDataMappingType:
      type: object
      properties:
        sourceDatasetId:
          type: string
          description: source dataset id from source KomMonitor instance
        targetDatasetId:
          type: string
          description: target dataset id from target KomMonitor instance
        sourceFeatureIdPrefix:
          type: string
          description: optional suffix for source dataset feature IDs
        targetFeatureIdPrefix:
          type: string
          description: optional suffix for target dataset feature IDs
        sourceFeatureIdSuffix:
          type: string
          description: optional suffix for source dataset feature IDs
        targetFeatureIdSuffix:
          type: string
          description: optional prefix for target dataset feature IDs
      description: mapping details to transfer certain spatial dataset features from
        one KomMonitor instance to another
    SpatialUnitDataMappingType:
      allOf:
      - $ref: '#/components/schemas/SpatialDataMappingType'
      - type: object
        properties:
          targetPeriodOfValidity:
            $ref: '#/components/schemas/PeriodOfValidityType'
        description: mapping details to transfer certain spatial dataset features
          from one KomMonitor instance to another
    IndicatorDataMappingType:
      allOf:
      - $ref: '#/components/schemas/SpatialDataMappingType'
      - type: object
        properties:
          indicatorSpatialUnitMappingDefs:
            type: array
            items:
              $ref: '#/components/schemas/IndicatorSpatialUnitMappingType'
        description: mapping details to transfer certain indicator timeseries data
          from one KomMonitor instance to another
    IndicatorSpatialUnitMappingType:
      type: object
      properties:
        sourceSpatialUnitDatasetId:
          type: string
          description: id of spatial unit dataset from source KomMonitor instance
        targetSpatialUnitDatasetId:
          type: string
          description: id of spatial unit dataset from target KomMonitor instance
      description: Mapping of certain indicator timeseries data of specific spatial
        unit
    IndicatorSpatialUnitMappingResultType:
      allOf:
      - $ref: '#/components/schemas/IndicatorSpatialUnitMappingType'
      - type: object
        properties:
          numberOfHarvestedFeatures:
            type: number
            format: int32
          errorOccurred:
            $ref: '#/components/schemas/SummaryType_errorsOccurred'
    PeriodOfValidityType:
      type: object
      properties:
        validStartDate:
          type: string
          description: start date of harvested features
          format: date
        validEndDate:
          type: string
          nullable: true
          description: end date of harvested features
          format: date          
      description: period of validity information for spatial features
    AuthenticationType:
      type: object
      properties:
        type:
          type: string
          description: the authentication type
          enum:
          - BASICAUTH
          - KEYCLOAK
          - NONE
        username:
          type: string
          description: the user name to authenticate against KomMonitor instance
        password:
          type: string
          description: the user password to authenticate against KomMonitor instance
            (encrypted)
        keycloakUrl:
          type: string
          description: optional url of Keycloak instance URL to authenticate if type='KEYCLOAK'
        keycloakRealm:
          type: string
          description: optional name of Keycloak realm to authenticate if type='KEYCLOAK'
        keycloakClientId:
          type: string
          description: optional clientId of Keycloak realm to authenticate if type='KEYCLOAK'
      description: information about authentication details in order to access the
        required data
    SummaryType_errorsOccurred:
      type: object
      properties:
        message:
          type: string
        code:
          type: number
          format: int32
  responses:
    UnauthorizedError:
      description: API key is missing or invalid
      headers:
        WWW_Authenticate:
          style: simple
          explode: false
          schema:
            type: string
      content: {}
